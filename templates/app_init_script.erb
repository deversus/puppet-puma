#! /bin/bash

# <%= @app_name %>
# App Version: <%= @app_version %>

### BEGIN INIT INFO
# Provides:          <%= @app_name %>
# Required-Start:    $local_fs $remote_fs $network $syslog redis-server
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: <%= @app_name %> rack/rails application
# Description:       <%= @app_name %> rack/rails application
### END INIT INFO


APP_ROOT="<%= @app_root %>"
APP_USER="<%= @puma_user %>"
DAEMON_OPTS="-C <%= @puma_config_path %>"
# PID_PATH="<%= @puma_pid_path %>"
SOCKET_PATH="<%= @puma_socket_path %>"
WEB_SERVER_PID="<%= @puma_pid_path %>"
RUNDIR=$(dirname "${WEB_SERVER_PID}")
NAME="<%= @app_name %>"
DESC="<%= @app_name %>"

check_pid(){
  if [ -f $WEB_SERVER_PID ]; then
    PID=`cat $WEB_SERVER_PID`
    STATUS=`ps aux | grep $PID | grep -v grep | wc -l`
  else
    STATUS=0
    PID=0
  fi
}

execute() {
  sudo -u $APP_USER -H bash -l -c "RAILS_ENV=<%= @rails_env %> <%= @ruby_exec_prefix %>$1"
}

start() {
  cd $APP_ROOT
  check_pid
  if [ "$PID" -ne 0 -a "$STATUS" -ne 0 ]; then
    # Program is running, exit with error code 1.
    echo "Error! $DESC $NAME is currently running!"
    exit 1
  else
    if [ `whoami` = root ]; then
      mkdir -p $RUNDIR
      touch $WEB_SERVER_PID
      chown <%= @puma_user %>:<%= @puma_user %> $RUNDIR $WEB_SERVER_PID
      chmod 755 $RUNDIR
      if [ -f "$SOCKET_PATH/puma.sock" ]; then
          execute "rm $SOCKET_PATH/puma.sock"
      fi
      execute "bundle exec puma $DAEMON_OPTS"
      echo "$DESC started"
    fi
  fi
}

stop() {
  cd $APP_ROOT
  check_pid
  if [ "$PID" -ne 0 -a "$STATUS" -ne 0 ]; then
    ## Program is running, stop it.
    kill -QUIT `cat $WEB_SERVER_PID`
    rm "$WEB_SERVER_PID" >> /dev/null
    echo "$DESC stopped"
  else
    ## Program is not running, exit with error.
    echo "Error! $DESC not started!"
    exit 1
  fi
}

restart() {
  cd $APP_ROOT
  check_pid
  if [ "$PID" -ne 0 -a "$STATUS" -ne 0 ]; then
    echo "Restarting $DESC..."
    kill -USR2 `cat $WEB_SERVER_PID`
    echo "$DESC restarted."
  else
    echo "Error, $NAME not running!"
    exit 1
  fi
}

status() {
  cd $APP_ROOT
  check_pid
  if [ "$PID" -ne 0 -a "$STATUS" -ne 0 ]; then
    echo "$DESC / Puma with PID $PID is running."
  else
    echo "$DESC is not running."
    exit 1
  fi
}

## Check to see if we are running as root first.
## Found at http://www.cyberciti.biz/tips/shell-root-user-check-script.html
if [ "$(id -u)" != "0" ]; then
    echo "This script must be run as root"
    exit 1
fi

case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  restart)
        restart
        ;;
  reload|force-reload)
        echo -n "Reloading $NAME configuration: "
        kill -HUP `cat $PID`
        echo "done."
        ;;
  status)
        status
        ;;
  *)
        echo "Usage: sudo service $NAME {start|stop|restart|reload}" >&2
        exit 1
        ;;
esac

exit 0
